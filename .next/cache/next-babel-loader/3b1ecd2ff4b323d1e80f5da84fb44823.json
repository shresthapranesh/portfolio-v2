{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport \"../public/css/styles.css\";\n\nvar AfterSubmit = function AfterSubmit() {\n  return __jsx(\"div\", {\n    className: \"contactform\",\n    id: \"aftersubmit\"\n  }, __jsx(\"div\", {\n    className: \"title\"\n  }, __jsx(\"span\", {\n    className: \"topic3\"\n  }, \"Thanks for Submitting. \", __jsx(\"br\", null), \" I will get in touch.\")));\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inherits(Form, _Component);\n\n  var _super = _createSuper(Form);\n\n  function Form() {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      subject: \"Advertise\",\n      message: \"\",\n      submitted: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var tempvar = event.target.name;\n      var tempvalue = event.target.value;\n\n      _this.setState(_defineProperty({}, tempvar, tempvalue));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (event) {\n      _this.setState({\n        submitted: true\n      });\n\n      var msg = {\n        to: \"pranesh.shrestha@ttu.edu\",\n        from: \"portfolio@praneshshrestha.com\",\n        subject: _this.state.subject,\n        firstname: _this.state.firstname,\n        lastname: _this.state.lastname,\n        text: _this.state.message\n      }; // sgMail.send(msg).then(\n      //   () => {},\n      //   (error) => {\n      //     console.log(error);\n      //     if (error.response) {\n      //       console.error(error.response.body);\n      //     }\n      //   }\n      // );\n\n      event.preventDefault();\n    });\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var isSubmitted = this.state.submitted;\n      var elements;\n\n      if (!isSubmitted) {\n        elements = __jsx(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"contactform\"\n        }, __jsx(\"h1\", {\n          className: \"form-style-1\"\n        }, \" Contact Form \"), __jsx(\"ul\", {\n          className: \"form-style-1\"\n        }, __jsx(\"li\", null, __jsx(\"label\", null, \"Full Name \", __jsx(\"span\", {\n          className: \"required\"\n        }, \"*\")), __jsx(\"input\", {\n          type: \"text\",\n          name: \"firstname\",\n          className: \"field-divided\",\n          placeholder: \"First\",\n          onChange: this.handleChange,\n          required: true\n        }), \" \", __jsx(\"input\", {\n          type: \"text\",\n          name: \"lastname\",\n          className: \"field-divided\",\n          placeholder: \"Last\",\n          onChange: this.handleChange,\n          required: true\n        })), __jsx(\"li\", null, __jsx(\"label\", null, \"Email \", __jsx(\"span\", {\n          className: \"required\"\n        }, \"*\")), __jsx(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          className: \"field-long\",\n          onChange: this.handleChange,\n          required: true\n        })), __jsx(\"li\", null, __jsx(\"label\", null, \"Subject\"), __jsx(\"select\", {\n          name: \"subject\",\n          className: \"field-select\",\n          onChange: this.handleChange\n        }, __jsx(\"option\", {\n          value: \"Advertise\"\n        }, \"Advertise\"), __jsx(\"option\", {\n          value: \"Partnership\"\n        }, \"Partnership\"), __jsx(\"option\", {\n          value: \"General Question\"\n        }, \"General\"))), __jsx(\"li\", null, __jsx(\"label\", null, \"Your Message \", __jsx(\"span\", {\n          className: \"required\"\n        }, \"*\")), __jsx(\"textarea\", {\n          name: \"message\",\n          id: \"field5\",\n          className: \"field-long field-textarea\",\n          onChange: this.handleChange,\n          required: true\n        })), __jsx(\"li\", null, __jsx(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }))));\n      } else {\n        elements = __jsx(AfterSubmit, null);\n      }\n\n      return __jsx(\"div\", null, elements);\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":null,"metadata":{},"sourceType":"module"}